Starting the Course Week-OmniStack 102019 Build an Airbnb Clone (aircnc - coofee cooperating or computing)
to Locate Spaces for Programmers. This Course will be made using JavaScript - NodeJs on BackEnd, React +
ReactNative (Front + Mobile).
------------------------------------------------------------------------------------------------------------
Servers - To RUN a specific Server or File: node src/server.js (this do not REFRESH automatically).

Automatically Refresh:
yarn add nodemon -D (-D tells the project that the dependency will be used only on DEV envoirment)

On Package.json after License, add the lines:
"scripts": {
    "dev": "nodemon src/server.js"
  },

Then run "yarn dev" (this server will listen to port an any update will refresh the browser).
------------------------------------------------------------------------------------------------------------
To Create the Node BackEnd Project:


To Create a New Project (could be start to node): yarn init -y (enter folder + Code .)

Adding dependencys:
To acelerate the construction of our app: yarn add express (npm install express also works).
To Create a Project into a folder: yarn create react-app frontend (yarn)
To Create a Project into a folder: npx create-react-app frontend (npm)
To Send FILES (Multipart form): yarn add multer
To Enable and Configure CORS on Backend: yarn add cors
-----------------------------------------------------------------------------------------------------------
MongoDB:
We will use MONGODB to Speed-Up our Development. Mongo Atlas is a Free-Web-DataBase until 500MB.

yarn add mongoose

ConnectionString:
mongodb+srv://omnistack:<password>@cluster0-jhuln.mongodb.net/test?retryWrites=true&w=majority
-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
React Web:
To Install react-native-cli: npm install -g react-native-cli
To create a New Project: yarn create react-app frontend (ou no npm: npx create-react-app frontend)
To RUN the Project: yarn start
Package to Make API Calls: yarn add axios
Package to Navigate (routes): yarn add react-router-dom
-----------------------------------------------------------------------------------------------------------
Dados de Teste: fernandopassaia@outlook.com - 5dfa4a26edfc383851a1fcd1
Company1 - 10 - Angular, React - 5dfa4bbeedfc383851a1fcd2
Company2 - 20 - C#, NodeJs - 5dfa4bfdedfc383851a1fcd3
Company3 - 30 - ReactNative, Flutter - 5dfa4c3fedfc383851a1fcd4
Company4 - Gratis - SQLServer, PostgreSQL - 5dfa4c99edfc383851a1fcd5
-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
React Mobile:
To Install react-native-cli: npm install -g react-native-cli
NOTA: No Windows o ReactNative só funciona com Node10. Então remova o Node pelo Painel de Controle e:
choco install -y nodejs.install --version 10.16.3 --force


Nós usaremos "Expo" pra criar o aplicativo Mobile, pois com ele não é necessário ter todas as dependências
de JavaScript e ObjectiveC em nossa máquina - e isso acelera DEMAIS o desenvolvimento. Ele encapsula o seu
código Java e ObjectiveC em um aplicativo que você pode instalar em seu Smartphone.

Passo 1 - instalar no computador: npm install -g expo-cli
Passo 2 - Procure na sua AppLoja do Smartphone e instale.

Reinicie o terminal. Para criar um projeto: expo init mobile (escolha template blank).
Para iniciar o Projeto: yart start
Nota: Pra restaurar as dependências/pacotes (node_modules) basta digitar "yarn" na pasta.
Pra ver o ReactMobile rodando e saber como configurar, veja as duas primeiras Ibagens na pasta "mobile".

Como criar o projeto sem usar o EXPO - no modo Padrão do REACT:
react-native init ProjectName
cd ProjectName
react-native run-android

Pacotes:
Package to Make API Calls: yarn add axios
Pra roteamento: yarn add react-navigation 
Depois: expo install react-native-gesture-handler react-native-reanimated
(Nota, eu tive que criar um projeto do zero e instalar essas duas bibliotecas, deu algum pau...)

Nota - para LIMPAR todo o CACHE do Projeto, você pode rodar:
 1. Clear watchman watches: watchman watch-del-all
 2. Delete node_modules: rm -rf node_modules and run yarn install
 3. Reset Metro's cache: yarn start --reset-cache
 4. yarn cache clean
 5. Remove the cache: rm -rf /tmp/metro-*

Isso foi necessário durante o desenvolvimento do lance de IMAGENS, quando as imagens não carregavam!

------------------------------------------------------------------------------------------------------------

Como CLONAR um repositório ZERADO e recriar toda pasta Mobile e reconfigurar todo ambiente:

Nota Fernando: Na Pasta "DocsSamples > React > Docs" tem várias IMAGENS que ajudarão na configuração.

* Para Configurar o Ambiente no Linux:
No arquivo .bashrc (na pasta fernandopassaia):
export PATH=/opt/firefox/firefox:$PATH:/home/fernandopassaia/Android/Sdk/platform-tools:$PATH:/home/fernandopassaia/Android/sdk:$PATH:/home/fernandopassaia/Android/Sdk/emulator:$PATH:/home/fernandopassaia/Android/Sdk/tools:$PATH:/home/fernandopassaia/Android/Sdk/tools/bin:$PATH:/home/fernandopassaia/Android/Sdk/platform-tools

No Arquivo environment:
sudo nano /etc/environment
JAVA_HOME="/usr/lib/jvm/java-11-openjdk-amd64/bin/"

* Para Configurar no Windows: Veja a imagem respectiva das variáveis de ambiente.


* Para configurar o Ambiente do React em Si:
(1) Node versão 10:
sudo apt update
sudo apt install build-essential apt-transport-https lsb-release ca-certificates curl
curl -sL https://deb.nodesource.com/setup_10.x | bash -
sudo apt install nodejs
(2) sudo npm install -g jetifier
(3) sudo npm install -g react-native-cli
(4) npm install -g expo-cli

Para instalar os Pacotes (que eu uso - nota: final de 2019, até agora):

(1) npm install axios
(2) npm install react-navigation
(3) npm install react-native-gesture-handler
(4) npm install react-native-reanimated
(5) npm install --save react-native-device-info

* Para clonar um repositório zerado e restaurar o Projeto e fazer rodar:

(1) Clone o repositório (nesse caso assetscontrol)
(2) Entre na pasta Mobile e remova os arquivos *.lock caso existam.
(3) sudo npm install
(4) Rode o adb devices e veja se o emulador está ativo (não unauthorized)
(5) Recomendo usar o Emulador 27 do Oreo 8.1: Está dando menos bug, e não fica tamanho gigantesco!!!
(6) Se o emulador estiver unauthorized, habilite o Modo Desenvolvedor (About > Build Number 5x)
(7) Caso dê erro no ./gradlew EACCESS rode "chmod 555 android/gradlew"
(8) Abra com o CODE e verifique se na pasta Android existe o "local.properties". Caso não, crie e:
sdk.dir = /home/fernandopassaia/Android/Sdk
(9) Para limpar e reinstalar tudo: rm -rf node_modules && npm install && react-native run-android
(10) Em uma ABA rode o npm start e deixe rodando (servidor JS) (nota: os LOGS ficarão aqui)
(11) Na outra Aba: react-native run android (ou --devideId=888xxx888xxx para selecionar o device).
(12) * Na pasta "Dev2018 > Mobile (React) > Bugs" estão os principais erros que podem ocorrer.

------------------------------------------------------------------------------------------------------------
