Starting the Course Week-OmniStack 102019 Build an Airbnb Clone (aircnc - coofee cooperating or computing)
to Locate Spaces for Programmers. This Course will be made using JavaScript - NodeJs on BackEnd, React +
ReactNative (Front + Mobile).
------------------------------------------------------------------------------------------------------------
Servers - To RUN a specific Server or File: node src/server.js (this do not REFRESH automatically).

Automatically Refresh:
yarn add nodemon -D (-D tells the project that the dependency will be used only on DEV envoirment)

On Package.json after License, add the lines:
"scripts": {
    "dev": "nodemon src/server.js"
  },

Then run "yarn dev" (this server will listen to port an any update will refresh the browser).
------------------------------------------------------------------------------------------------------------
To Create the Node BackEnd Project:
To Create a New Project (could be start to node): yarn init -y (enter folder + Code .)

Adding dependencys:
To acelerate the construction of our app: yarn add express (npm install express also works).
To Create a Project into a folder: yarn create react-app frontend (yarn)
To Create a Project into a folder: npx create-react-app frontend (npm)
To Send FILES (Multipart form): yarn add multer
To Enable and Configure CORS on Backend: yarn add cors
-----------------------------------------------------------------------------------------------------------
MongoDB:
We will use MONGODB to Speed-Up our Development. Mongo Atlas is a Free-Web-DataBase until 500MB.

yarn add mongoose

ConnectionString:
mongodb+srv://omnistack:<password>@cluster0-jhuln.mongodb.net/test?retryWrites=true&w=majority
-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
React Web:
To create a New Project: yarn create react-app frontend (ou no npm: npx create-react-app frontend)
To RUN the Project: yarn start
PAckage to Make API Calls: yarn add axios
Package to Navigate (routes): yarn add react-router-dom
-----------------------------------------------------------------------------------------------------------
Dados de Teste: fernandopassaia@outlook.com - 5dfa4a26edfc383851a1fcd1
Company1 - 10 - Angular, React - 5dfa4bbeedfc383851a1fcd2
Company2 - 20 - C#, NodeJs - 5dfa4bfdedfc383851a1fcd3
Company3 - 30 - ReactNative, Flutter - 5dfa4c3fedfc383851a1fcd4
Company4 - Gratis - SQLServer, PostgreSQL - 5dfa4c99edfc383851a1fcd5
-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
React Mobile:
Nós usaremos "Expo" pra criar o aplicativo Mobile, pois com ele não é necessário ter todas as dependências
de JavaScript e ObjectiveC em nossa máquina - e isso acelera DEMAIS o desenvolvimento. Ele encapsula o seu
código Java e ObjectiveC em um aplicativo que você pode instalar em seu Smartphone.

Passo 1 - instalar no computador: npm install -g expo-cli
Passo 2 - Procure na sua AppLoja do Smartphone e instale.

Reinicie o terminal. Para criar um projeto: expo init mobile (escolha template blank).
Pra ver o ReactMobile rodando e saber como configurar, veja as duas primeiras Ibagens na pasta "mobile".

Pacotes:
Pra roteamento: yarn add react-navigation
